<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:webflow-config="http://www.springframework.org/schema/webflow-config"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd http://www.springframework.org/schema/webflow-config http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd">

    <!-- Looks for bean definitions in the specified package -->
    <context:component-scan base-package="com.caveofprogramming.spring.web.controllers"/>

    <!-- Makes annotations like @Controller work -->
    <mvc:annotation-driven></mvc:annotation-driven>

    <!-- Dispatcher servlet will consult this view resolver to map controller returned
        strings into appropriate view names. -->
    <bean id="tilesViewResolver"
          class="org.springframework.web.servlet.view.tiles2.TilesViewResolver">
    </bean>


    <bean id="tilesConfigurer"
          class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>/WEB-INF/layouts/default.xml</value>
            </list>
        </property>
    </bean>

    <bean id="messageSource"
          class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="com.caveofprogramming.spring.web.messages.messages"/>
    </bean>

    <mvc:resources location="/resources/" mapping="/static/**"/>

    <!--
     A flow registry specifies where our web flows will be located. It also
     identifies what services we will use to build our flows (Apache tiles in this case).
    -->
    <webflow-config:flow-registry id="flowRegistry"
                                  base-path="/WEB-INF/flows" flow-builder-services="flowBuilderServices">
        <webflow-config:flow-location path="contact-flow.xml"
                                      id="message">
        </webflow-config:flow-location>
    </webflow-config:flow-registry>

    <!--
    The flow executor is what actually executes the web flows.
    -->
    <webflow-config:flow-executor id="flowExecutor"
                                  flow-registry="flowRegistry">
    </webflow-config:flow-executor>

    <!--
    This is the equivalent of a controller which actually invokes the flow executor. It is responsible
    for finding the flow executor bound to a particular URI and running it rather than just going to a
    view resolver.
    -->
    <bean id="flowHandlerAdaptor"
          class="org.springframework.webflow.mvc.servlet.FlowHandlerAdapter">
        <property name="flowExecutor" ref="flowExecutor"/>
    </bean>


    <!--
    This is what 'watches' certain URLs to recognize if they are connected with flows.
    -->
    <bean id="flowHandlerMapping"
          class="org.springframework.webflow.mvc.servlet.FlowHandlerMapping">
        <property name="flowRegistry" ref="flowRegistry"/>
        <!-- This handler mapping is priotized to look at URLs first before anything else. -->
        <property name="order" value="0"/>
    </bean>

    <webflow-config:flow-builder-services
            id="flowBuilderServices" view-factory-creator="mvcViewFactoryCreator" />

    <!--
    Marking tiles as our view creator for our web flows.
    -->
    <bean id="mvcViewFactoryCreator"
          class="org.springframework.webflow.mvc.builder.MvcViewFactoryCreator">
        <property name="viewResolvers" ref="tilesViewResolver"/>
    </bean>

</beans>